const int N = 500005;
const double pi = acos(-1.0);
struct complex{///复数类
    double real,imag;
    complex (double r=0.0,double i=0.0) {
        real=r; imag=i;
    }
    complex operator + (const complex &x) {
        return complex(x.real+real,x.imag+imag);
    }
    complex operator - (const complex &x) {
        return complex(real-x.real,imag-x.imag);
    }
    complex operator * (const complex &x) {
        return complex(x.real*real-x.imag*imag,imag*x.real+real*x.imag);
    }
}vara[N],varb[N];
void FFT(complex *F,int len,int t){
    rader(F,len);
    for(int h=2;h<=len;h<<=1){ ///L from 1 to M,2^M=len 
        ///J_product_two_power_of_M_subtract_L
        ///M_subtract_L_product_h_equals_to_len
        complex wn(cos(t*2*pi/h),sin(t*2*pi/h));///公比
        for(int j=0;j<len;j+=h) {
            complex E(1,0);///螺旋因子
            for(int k=j;k<j+h/2;k++) {
                complex u=F[k];///蝶型操作
                complex v=E*F[k+h/2];
                F[k]=u+v;///前半部分
                F[k+h/2]=u-v;///后半部分
                E=E*wn;
            }
        }
    }
    if(t==-1)///IDFT
    for(int i=0;i<len;i++) F[i].real/=len;
}
 
